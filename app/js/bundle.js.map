{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./chromestorage.ts","webpack:///./stringconst.ts","webpack:///./util.ts","webpack:///./index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","chromeStoreApi","_this","this","getDataFromKoinAdda","what2get","__awaiter","$","baseUrl","data","fail","err","console","log","_a","sent","saveDateToStore","chrome","storage","local","set","getDataFromStore","dataKey","Promise","resolve","reject","result","isEmptyObject","undefined","baseKeyWord","classes","utility","Util","koinNameProps","xUrls","shortname","xurl","xkoinurl","diffMinutes","dt2","dt1","diff","getTime","Math","abs","round","filterUniqueKoins","allexchange","allKoins","keys","forEach","exchnage","koinName","filter","x","find","k","toUpperCase","item","koin","split","fav","exchage","push","sort","a","b","arrangeDataForUi","allKoinsData","favKoins","allXchangeData","uniqueKoins","fullname","ex","exchange","lastprice","substring","url","koinNameProp","kx","koinLastPricProp","toLowerCase","startsWith","koinInxchange","xUrl","Number","parseFloat","currency_full_form","clone","JSON","parse","stringify","dataInitialization","index_awaiter","_c","_b","formattedDataForUi","visualizeMe","koins","empty","rows","ceil","length","index","col","crpto","class","append","style","src","alt","text","map","target","href","addClass","floor","random","appendTo","shift","on","event","currentTarget","trim","findIndex","splice","remove","koinaddafav","chooseFavs","tabulizeMe","tableContainer","id","tabulartbody","ko","tds","xchange","modal","show","val","jWaitIndicatorStart","waitIndicatorImage","hasClass","favKoins_1","jWaitIndicatorDestroy","favKoins_2","searchtext","removeClass","favKoins_3","favKoins_4","apply","hide","bouncingball","initBouncingBall"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","class ChromeStoreAPi {\r\n\r\n    baseUrl: string;\r\n    baseKeyWord: string;\r\n\r\n    constructor() {\r\n        this.baseUrl = \"https://koinadda.azurewebsites.net/api/koinadda/\";\r\n        this.baseKeyWord = \"knsuchna\";\r\n    }\r\n\r\n    getDataFromKoinAdda = async (what2get: string) => {\r\n        return await $.get(`${this.baseUrl}${what2get}`, (data) => {\r\n            return data;\r\n        }).fail((err) => {\r\n            // uh oh, something went wrong\r\n            console.log(err);\r\n            return undefined;\r\n        });\r\n    }\r\n\r\n    saveDateToStore = async (data: any) => {\r\n        await chrome.storage.local.set(data);\r\n    }\r\n\r\n    getDataFromStore = async (dataKey: any) => {\r\n        let result: any;\r\n        await new Promise((resolve, reject) => {\r\n            chrome.storage.local.get(dataKey, (data) => {\r\n                if (!$.isEmptyObject(data)) {\r\n                    result = data[dataKey];\r\n                } else {\r\n                    result = undefined;\r\n                }\r\n                resolve();\r\n            });\r\n        });\r\n        return result;\r\n    }\r\n}\r\n\r\nexport const chromeStoreApi = new ChromeStoreAPi();\r\n","export const classes: string[] =\r\n    [\"alert-info\", \"alert-danger\", \"alert-primary\", \"alert-secondary\", \"alert-success\", \"alert-warning\",\r\n        \"alert-info\", \"alert-light\", \"alert-dark\"];\r\n","import { IKoin, ITradeCenter, IXurl } from \"./interfaces\";\r\n\r\nclass Util {\r\n    static allXchangeData: any;\r\n    static favKoins: string[];\r\n    static uniqueKoins: IKoin[];\r\n    static formattedDataForUi: IKoin[];\r\n    static koinNameProps = [\"currency_short_form\", \"marketName\", \"baseMarket\"];\r\n    static xUrls: IXurl[] = [\r\n        { name: \"koinex\", shortname: \"knx\", xurl: \"https://koinex.in/\", xkoinurl: \"https://koinex.in/exchange/inr/\" },\r\n        // tslint:disable-next-line:max-line-length\r\n        { name: \"coindelta\", shortname: \"cd\", xurl: \"https://coindelta.com/\", xkoinurl: \"https://coindelta.com/market/advance/\" },\r\n        { name: \"wazirx\", shortname: \"wzrx\", xurl: \"https://wazirx.com/\", xkoinurl: \"https://wazirx.com/exchange/\" },\r\n        { name: \"bitbns\", shortname: \"btbns\", xurl: \"https://bitbns.com/\", xkoinurl: \"https://bitbns.com/trade/#/\" },\r\n    ];\r\n    // time diif between two date to call real api\r\n    static diffMinutes = (dt2: Date, dt1: Date) => {\r\n        let diff: number = (dt2.getTime() - dt1.getTime()) / 1000;\r\n        diff /= 60;\r\n        return Math.abs(Math.round(diff));\r\n    }\r\n\r\n    static filterUniqueKoins = (allexchange: any): IKoin[] => {\r\n        const allKoins: IKoin[] = [];\r\n        Object.keys(allexchange).forEach((exchnage) => {\r\n            const koinName = Util.koinNameProps.filter((x) => {\r\n                return Object.keys(allexchange[exchnage][0]).find((k) => k.toUpperCase() === x.toUpperCase());\r\n            })[0];\r\n            allexchange[exchnage].forEach((item: any) => {\r\n                if (!allKoins.find((x) => x.name === item[koinName].toUpperCase())) {\r\n                    const koin: IKoin = {\r\n                        name: item[koinName].split(\"-\")[0].toUpperCase(),\r\n                        fav: false, exchage: [],\r\n                    };\r\n                    allKoins.push(koin);\r\n                }\r\n            });\r\n        });\r\n        return allKoins.sort((a, b) => {\r\n            if (a.name < b.name) { return -1; }\r\n            if (a.name > b.name) { return 1; }\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    static arrangeDataForUi = (): IKoin[] => {\r\n        const allKoinsData: IKoin[] = [];\r\n        const favKoins = utility.favKoins;\r\n        const data = utility.allXchangeData;\r\n        utility.uniqueKoins.forEach((k) => {\r\n            // logic\r\n            const koin: IKoin = { name: k.name, fullname: \"NA\", exchage: [] };\r\n            koin.fav = favKoins.find((x) => x === k.name.toUpperCase()) === undefined ? false : true;\r\n            Object.keys(data).forEach((ex) => {\r\n                const exchange: ITradeCenter = { lastprice: 0, name: ex.substring(0, 2), url: \"https://google.com\" };\r\n                // find if koin name property\r\n                const koinNameProp = Util.koinNameProps.filter((x) => {\r\n                    return Object.keys(data[ex][0]).find((kx) => kx.toUpperCase() === x.toUpperCase());\r\n                })[0];\r\n                // find if koin last like prop is avilabel\r\n                const koinLastPricProp = Object.keys(data[ex][0]).filter((x) => {\r\n                    return x.toLowerCase().startsWith(\"last\");\r\n                })[0];\r\n                // find if koin is avilabel in exchange\r\n                const koinInxchange: any = data[ex].find((item: any) =>\r\n                    item[koinNameProp].split(\"-\")[0].toUpperCase() === k.name.toUpperCase());\r\n                // find xchange url and name;\r\n                const xUrl = utility.xUrls.find((x) => x.name === ex.toLowerCase());\r\n                exchange.name = xUrl.name;\r\n                exchange.shortname = xUrl.shortname;\r\n                exchange.url = xUrl.xurl;\r\n\r\n                if (koinInxchange !== undefined) {\r\n                    koin.fullname = koinInxchange[koinNameProp];\r\n                    exchange.lastprice = Number.parseFloat(koinInxchange[koinLastPricProp]);\r\n\r\n                    switch (ex.toUpperCase()) {\r\n                        case \"KOINEX\":\r\n                            exchange.url = `${xUrl.xkoinurl}${koinInxchange.currency_full_form}`;\r\n                            break;\r\n                        case \"COINDELTA\":\r\n                            exchange.url = `${xUrl.xkoinurl}${koinInxchange[koinNameProp]}`;\r\n                            break;\r\n                        case \"BITBNS\":\r\n                            exchange.url = `${xUrl.xkoinurl}${koin.name.toLowerCase()}`;\r\n                            break;\r\n                        case \"WAZIRX\":\r\n                            exchange.url = `${xUrl.xkoinurl}${k.name.toUpperCase()}-INR`;\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                }\r\n                koin.exchage.push(exchange);\r\n            });\r\n            allKoinsData.push(koin);\r\n\r\n        });\r\n        return allKoinsData;\r\n    }\r\n\r\n    static clone = (data: any): any => {\r\n        return JSON.parse(JSON.stringify(data));\r\n    }\r\n}\r\nexport const utility = Util;\r\n","import { chromeStoreApi } from \"./chromestorage\";\r\nimport { IKoin, ITradeCenter } from \"./interfaces\";\r\nimport { classes } from \"./stringconst\";\r\nimport { utility } from \"./util\";\r\n$(() => {\r\n    // prepare data to make ui\r\n    const dataInitialization: any = async () => {\r\n        utility.allXchangeData = await chromeStoreApi.getDataFromKoinAdda(\"GetAllKoin\");\r\n        utility.favKoins = await chromeStoreApi.getDataFromStore(\"koinaddafav\");\r\n        utility.uniqueKoins = utility.filterUniqueKoins(utility.allXchangeData);\r\n        utility.formattedDataForUi = utility.arrangeDataForUi();\r\n        return utility.clone(utility.formattedDataForUi);\r\n    };\r\n\r\n    const wakeMeUp: any = async () => {\r\n        $(\"body\").jWaitIndicatorStart({ waitIndicatorImage: \"../icon/moon.svg\" });\r\n        visualizeMe(await dataInitialization());\r\n        $(\"body\").jWaitIndicatorDestroy();\r\n    };\r\n\r\n    const visualizeMe = (koins: IKoin[]) => {\r\n        $(\"#maincontainer\").empty();\r\n        const noOfCols: number = 3;\r\n        const rows: number = Math.ceil(koins.length / (12 / noOfCols));\r\n        for (let index: number = 1; index <= rows; index++) {\r\n            const col: any[] = [];\r\n            for (let i: number = 0; i < (12 / noOfCols); i++) {\r\n                // your code\r\n                if (koins[i] === undefined) {\r\n                    break;\r\n                }\r\n                const crpto: IKoin = koins[i];\r\n                col.push($(\"<div>\",\r\n                    { class: `col-sm-${noOfCols} col-md-${noOfCols} col-lg-${noOfCols} col-xl-${noOfCols}` })\r\n                    .append(\r\n                        $(\"<div>\", { class: \"card\" }).append(\r\n                            $(\"<h5>\", { class: \"card-header\", style: \"cursor: pointer\" })\r\n                                .append(\r\n                                    (crpto.fav ? $(\"<img>\",\r\n                                        {\r\n                                            src: \"./icon/fav.svg\",\r\n                                            alt: \"icon name\", class: \"favicon float-right\",\r\n                                        }) : \"\"),\r\n                                )\r\n                                .append($(\"<div>\", { class: \"float-left\" })\r\n                                    .append($(\"<span>\", { text: \"$\" }))\r\n                                    .append($(\"<span>\", { text: crpto.name, class: \"text\" })),\r\n                                ),\r\n                        ).append(\r\n                            $(\"<div>\", { class: \"card-body\" }).append(\r\n                                $(\"<h5>\", { class: \"card-title\", text: \"Exchange Prices\" }),\r\n                            ).append(\r\n                                $(\"<div>\", { class: \"table-responsive\" })\r\n                                    .append(\r\n                                        $(\"<table>\", { class: \"table\" })\r\n                                            .append($(\"<thead>\")\r\n                                                .append($(\"<tr>\")\r\n                                                    .append(\r\n                                                        // append header here\r\n                                                        crpto.exchage.map((item) => {\r\n                                                            return $(\"<th>\", { text: item.shortname });\r\n                                                        }),\r\n                                                    ),\r\n                                                ),\r\n                                            )\r\n                                            .append($(\"<tbody>\")\r\n                                                .append($(\"<tr>\")\r\n                                                    .append(\r\n                                                        // append body here\r\n                                                        crpto.exchage.map((item) => {\r\n                                                            return $(\"<td>\")\r\n                                                                .append($(\"<a>\", {\r\n                                                                    text: item.lastprice + \"₹\",\r\n                                                                    target: \"_blank\", href: item.url,\r\n                                                                }));\r\n                                                        }),\r\n                                                    ),\r\n                                                ),\r\n                                            ),\r\n                                    ),\r\n                            ).addClass(classes[Math.floor(Math.random() * classes.length)]),\r\n                        ),\r\n                    ));\r\n            }\r\n            // add cols to row\r\n            $(\"<div>\", { class: \"row\" }).append(col).appendTo(\"#maincontainer\");\r\n            for (let i: number = 0; i < (12 / noOfCols); i++) {\r\n                koins.shift();\r\n            }\r\n        }\r\n        chooseFavs();\r\n    };\r\n\r\n    const tabulizeMe = (koins: IKoin[]) => {\r\n        // code\r\n        $(\"#maincontainer\").empty();\r\n        const tableContainer = $(\"<div>\", { class: \"table-responsive\" });\r\n        tableContainer.append(\r\n            $(\"<table>\", { class: \"table table-dark\", id: \"tabular\" })\r\n                .append($(\"<thead>\")\r\n                    .append($(\"<tr>\")\r\n                        .append($(\"<th>\", { text: \"\" }))\r\n                        .append(\r\n                            // append header here\r\n                            koins[0].exchage.map((item) => {\r\n                                return $(\"<th>\", { text: item.name });\r\n                            }),\r\n                        ),\r\n                    ),\r\n                )\r\n                .append($(\"<tbody>\", { id: \"tabulartbody\" })),\r\n        );\r\n        const tabulartbody = tableContainer.find(\"#tabulartbody\");\r\n        koins.forEach((ko) => {\r\n            // logic\r\n            const tds = [$(\"<td>\", { text: ko.name })];\r\n            ko.exchage.forEach((xchange) => {\r\n                tds.push($(\"<td>\", { text: xchange.lastprice }));\r\n            });\r\n            tabulartbody.append($(\"<tr>\")\r\n                .append(tds));\r\n        });\r\n        $(\"#maincontainer\").append(tableContainer);\r\n    };\r\n    const navintraction = () => {\r\n        // your code\r\n        // ui interation events\r\n        $(\"#reload\").on(\"click\", async () => {\r\n            // $(\"#fav\").removeClass(\"active\");\r\n            $(\"#searchtext\").val(\"\");\r\n            $(\"body\").jWaitIndicatorStart({ waitIndicatorImage: \"../icon/moon.svg\" });\r\n            let data = await dataInitialization();\r\n            if ($(\"#fav\").hasClass(\"active\")) {\r\n                const favKoins: string[] = utility.favKoins;\r\n                data = data.filter((x) => favKoins.find((k) => k === x.name.toUpperCase()));\r\n            }\r\n            if ($(\"#tabulardata\").hasClass(\"active\")) {\r\n                tabulizeMe(data);\r\n            } else {\r\n                visualizeMe(data);\r\n            }\r\n            $(\"body\").jWaitIndicatorDestroy();\r\n        });\r\n        // search koins\r\n        $(\"#searchtext\").on(\"keyup\", async (event) => {\r\n            // your code\r\n            const text: string = ($(event.target).val() as string).toUpperCase().trim();\r\n            let koins = utility.clone(utility.formattedDataForUi);\r\n            if ($(\"#fav\").hasClass(\"active\")) {\r\n                const favKoins: string[] = utility.favKoins;\r\n                koins = koins.filter((x) => favKoins.find((k) => k === x.name.toUpperCase()));\r\n            }\r\n            if ($(\"#tabulardata\").hasClass(\"active\")) {\r\n                tabulizeMe(koins.filter((x) => x.name.toUpperCase().startsWith(text)));\r\n            } else {\r\n                visualizeMe(koins.filter((x) => x.name.toUpperCase().startsWith(text)));\r\n            }\r\n        });\r\n        // get all fav koins\r\n        $(\"#fav\").on(\"click\", async (event) => {\r\n            // your code\r\n            let koins = utility.clone(utility.formattedDataForUi);\r\n            const searchtext: string = ($(\"#searchtext\").val() as string).toUpperCase().trim();\r\n            if (searchtext !== \"\") {\r\n                koins = koins.filter((x) => x.name.toUpperCase().startsWith(searchtext));\r\n            }\r\n            if (!$(\"#fav\").hasClass(\"active\")) {\r\n                $(\"#fav\").addClass(\"active\");\r\n                const favKoins: string[] = utility.favKoins;\r\n                koins = koins.filter((x) => favKoins.find((k) => k === x.name.toUpperCase()));\r\n            } else {\r\n                $(\"#fav\").removeClass(\"active\");\r\n            }\r\n            if ($(\"#tabulardata\").hasClass(\"active\")) {\r\n                tabulizeMe(koins);\r\n            } else {\r\n                visualizeMe(koins);\r\n            }\r\n        });\r\n\r\n        $(\"#tabulardata\").on(\"click\", async (event) => {\r\n            // your code\r\n            let koins = utility.clone(utility.formattedDataForUi);\r\n            const searchtext: string = ($(\"#searchtext\").val() as string).toUpperCase().trim();\r\n            if (searchtext !== \"\") {\r\n                koins = koins.filter((x) => x.name.toUpperCase().startsWith(searchtext));\r\n            }\r\n            if ($(\"#fav\").hasClass(\"active\")) {\r\n                const favKoins: string[] = utility.favKoins;\r\n                koins = koins.filter((x) => favKoins.find((k) => k === x.name.toUpperCase()));\r\n            }\r\n            if (!$(\"#tabulardata\").hasClass(\"active\")) {\r\n                $(\"#tabulardata\").addClass(\"active\");\r\n                tabulizeMe(koins);\r\n            } else {\r\n                $(\"#tabulardata\").removeClass(\"active\");\r\n                visualizeMe(koins);\r\n            }\r\n\r\n        });\r\n    };\r\n    // make fav koins\r\n    // tslint:disable-next-line:typedef\r\n    function chooseFavs() {\r\n        $(\".card-header\").on(\"click\", async (event) => {\r\n            console.log(event);\r\n            const favKoins = utility.favKoins;\r\n            const text: string = ($(event.currentTarget).find(\".text\").text() as string).toUpperCase().trim();\r\n            if (!favKoins.find((x) => x === text)) {\r\n                favKoins.push(text);\r\n                $(event.currentTarget).append(\r\n                    $(\"<img>\", { src: \"./icon/fav.svg\", alt: \"icon name\", class: \"favicon float-right\" }),\r\n                );\r\n            } else {\r\n                const index: number = favKoins.findIndex(((x) => x === text));\r\n                favKoins.splice(index, 1);\r\n                $(event.currentTarget).find(\".favicon\").remove();\r\n            }\r\n            chromeStoreApi.saveDateToStore({ koinaddafav: utility.favKoins });\r\n        });\r\n    }\r\n\r\n    // modal magic\r\n    $(\"#cryptoModal\").modal(\"show\");\r\n    $(\"#yesModal\").on(\"click\", () => {\r\n        $(\"#cryptoModal\").modal(\"hide\");\r\n        $(\"#navbar\").show();\r\n        navintraction();\r\n        wakeMeUp();\r\n    });\r\n    $(\"#noModal\").on(\"click\", () => {\r\n        $(\"#cryptoModal\").modal(\"hide\");\r\n        $(\"#navbar\").hide();\r\n        // $(\"body\").addClass(classes[Math.floor(Math.random() * classes.length)])\r\n        $(\"body\").append(\r\n            $(\"<canvas>\"),\r\n        );\r\n        bouncingball.initBouncingBall();\r\n    });\r\n});\r\n"],"sourceRoot":""}